<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Frank's Blogs</title><link>https://frankshawnsunshine.github.io/FrankBlogs</link><description>肖鹏程的个人博客</description><copyright>Frank's Blogs</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://frankshawnsunshine.github.io/FrankBlogs</link></image><lastBuildDate>Tue, 29 Apr 2025 05:43:05 +0000</lastBuildDate><managingEditor>Frank's Blogs</managingEditor><ttl>60</ttl><webMaster>Frank's Blogs</webMaster><item><title>Git的使用</title><link>https://frankshawnsunshine.github.io/FrankBlogs/post/Git-de-shi-yong.html</link><description># Git使用
## 常用方法

 1. 初始化git库
     ```sh
    git init
     ```
 2. 关联远程仓库（git@172.20.253.19:/home/git/git_web/web.git）
    ```sh
    git remote add origin git@172.20.253.19:/home/git/git_web/web.git
    ```
3. 将修改添加到暂存区
    ```sh
    git add .
    ```
4. 提交修改到本地仓库
    ```sh
    git commit -m '修改信息'
    ```
5. 将本地仓库推送到远程仓库
    ```sh
    git push origin master
    ```
6. 设置名字和邮箱
    ```sh
    git config user.name/email '   '
    ```
7. 生成公钥和私钥
    ```sh
    ssh-keygen -t rsa -C 'email'
    ```
8. 放弃工作区修改
    ```sh
    git checkout -- file
    ```
9. 暂存区回退到工作区
    ```sh
    git reset HEAD file
    ```
10. 强制拉取
    ```sh
    git fetch --all
    git reset --hard origin/master 
    git pull origin master
    ```
11. 重新关联远程仓库
    ```sh
    git remote rm origin
    git remote add origin [url]
    ```

## 分支操作
### 查看分支
查看的git命令如下：
```sh
git branch 列出本地已经存在的分支，并且当前分支会用*标记
git branch -r 查看远程版本库的分支列表
git branch -a 查看所有分支列表（包括本地和远程，remotes/开头的表示远程分支）
git branch -v 查看一个分支的最后一次提交
git branch --merged  查看哪些分支已经合并到当前分支
git branch --no-merged 查看所有未合并工作的分支
```
### 创建和切换分支
- 创建新分支
    ```sh
    git branch 新分支名称
    ```
- 切换分支
    ```sh
    git checkout 分支名称
    ```
- 创建分支的同时，切换到该分支上
    ```sh
    git checkout -b 新分支名称
    ```
### 从远程仓库pull（拉取）代码到本地分支
- 指定远程分支，和本地分支
    ```sh
    git pull origin 远程分支名称:本地分支名称
    ```
### 将新分支推送到远程仓库
```sh
git push origin 分支名称
```
假设我本地创建了一个名为dev的分支，远程仓库还没有这个分支，推送的命令是：
```sh
git push --set-upstream origin dev
```
### 删除分支
- 删除本地分支（不能删除当前所在的分支，如果要删除，必须先切换到其他分支上）
    ```sh
    git branch -d 分支名称
    ```
如果删除时报错：**error: The branch '分支名称' is not fully merged.** （意思是：分支未完全合并）。</description><guid isPermaLink="true">https://frankshawnsunshine.github.io/FrankBlogs/post/Git-de-shi-yong.html</guid><pubDate>Tue, 29 Apr 2025 05:42:38 +0000</pubDate></item><item><title>使用Windows系统的相关问题</title><link>https://frankshawnsunshine.github.io/FrankBlogs/post/shi-yong-Windows-xi-tong-de-xiang-guan-wen-ti.html</link><description># C 盘空间不足
1. `Temp`文件夹（C:Windows\Temp）
Temp 文件夹用于存放系统运行软件、打开文档时产生的临时文件，如解压文件的临时文件。</description><guid isPermaLink="true">https://frankshawnsunshine.github.io/FrankBlogs/post/shi-yong-Windows-xi-tong-de-xiang-guan-wen-ti.html</guid><pubDate>Tue, 29 Apr 2025 04:32:11 +0000</pubDate></item></channel></rss>